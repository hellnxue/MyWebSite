
/*变量需要先定义后再使用，右前后顺序的*/ 
$color:#999;
$border-color:black;
$bgColors:yellow;

@import  "_abc";
p{
	$width:200px;
	width:$width;
	color:$color;
	border:1px solid $border-color;
	 
	}
#content{
  article{
    h1{
		color:#333;
	}
	p{
		border:1px solid $border-color;
		transition:border 0.25s ease-in-out 0s,background-color 0.15s ease-in-out 0s;
	    background-color:#eee;
		&:hover{
			cursor:pointer;
		    background-color:#ddd;
			border:1px solid yellow;
		}
	}
	 
  }
  
  aside{
     background-color:#eee;
	 body.ctt &{
	   color:pink;
	 }
  }
}
/*群组选择器*/
#content{
  h1,h2{
    background-color:#abcdef;
	
  }
}

nav,aside{
   a{
     text-decoration:none;
   }
}


 /*-----------子组合选择器和同层组合选择器：>、+和~ 这类的也可以应用嵌套规则，sass会把嵌套的一个个连起来----------*/
div#ultt{

   /*
     结果
     div#ultt li + li {
		background-color: pink;
	 }
   */
   li{
     +li{
	 	 font-weight:600;
	 }
   	 
   }
   
   
   /*
     结果
	div#ultt > ul > li {
		text-decoration: underline;
	}
   */
   >ul{
      >li{
	     text-decoration:underline;
	  }  
   }
   
 
/*why.....?
   Because:&会被替换为div#ultt ul 而不是ul,所以........&符号有待考证
   
   可以用这个案例证明奥(&会被替换为div#ultt ul 而不是ul)
   #content{
   article {
 
	nav + & { color: red }
   }
}
*/   
ul{
      text-decoration:underline;
      li  + &{
	     border:2px solid yellow;

	  }
   }   
}


/*  -------------------------------------------嵌套属性----------------------------------- */


//生成样式代码

 //.propertyNest {
//  border: 2px solid #ddd;
//  border-top-color: yellow;
//  border-top-width: 4px;
//  border-bottom-color: blue;
//  border-bottom-width: 4px;
// }
.propertyNest{
   p{
     border:none;
	 width:auto;
   }
   border: 2px solid #ddd{
      top:{
	     color:yellow;
		 width:4px;
	  }
	  
	  bottom:{
	     color:blue;
		 width:4px;
	  }
   }
}

/*-----------默认变量值--------------------*/

 $test-color:red;
$text-color2:blue;
div[data-vb="dfvb"]{
  background-color:$bgColors;
  @import "abd";/*嵌套导入局部sass文件*/
  border-color:$dcolor;
  border:1px solid black{
     color:$dcolor;
	 width:2px;
  };
 text-decoration: $text;
 border-color:$text-color2;
  
}



/*导入原生的CSS文件*/
@import url(../mycss/originalCSS.css);

//@import "_changeSass";

//混合样式定义
@mixin rounded-corner{
  display:block;
  width:100%;
  height:34px;
  padding:6px 12px;
  box-sizing:border-box;
  border:1px solid #ccc;
  border-radius:4px;
  box-shadow:0 1px 1px rgba(0,0,0,.075) inset;
  background-color:#fff;
  color:#555;
  font-size:14px;
  line-height:1.4;
  transition:border-color 0.15s ease-in-out 0s,box-shadow 0.15s ease-in-out 0s;
  &:focus{
  	border-color:#66afe9;
	box-shadow:0 1px 1px rgba(0,0,0,0.075) inset,0 0 8px rgba(102,175,233,0.6) ;
  }
}


//混合器使用
[name=helln]{
  @include rounded-corner;
  
}

[name=favorite]{
  @include rounded-corner;
}
//带有参数的混合器  有默认值的参数要定义在没有默认值参数的后面 ，不然会报语法错误的，比如$active和$hover:$normal的位置

@mixin hihi($normal,$hover,$active:$normal){
	color:$normal;
	
	&:hover{
	 color:$hover;
	}
	&:active{
	  color:$active;
	}

}

a.hi{
  @include hihi($normal:black,$hover:pink)
}







//选择器继承

/*
	选择器.seriousError继承.error后，.error会被替换为：
	.error, .seriousError {
		background-color: #fdd;
		border: 1px solid red;
		margin-top: 5px;
	}
	
	并且，继承了.error后，与.seriousError的其它选择器组合会与.error一样的效果
*/
.error{
  margin-top:5px;
  border: 1px solid red;
  background-color: #fdd;
}


/*
  	源码中:
	div.error, div.seriousError {
		border-radius: 5px;
	}
*/
div.error{
  
  border-radius:5px;
  
}


/*
  源码中：
  
	.error p, .seriousError p {
		border: medium none;
		color: #000;
		width: auto;
	}
*/
.error p{
  width:auto;
  color:#000;
  border:none;}
  
  
/*
	源码中：
	.seriousError {
    border-width: 3px;
	}
	.error, .seriousError {
		background-color: #fdd;
		margin-top: 5px;
	}
*/
.seriousError {
	@extend .error;
	border-width: 3px;
}
/*继承元素选择器的CSS样式规则*/
font{
  font-size:19px;}
  
.disabled{
	color:gray;
	@extend font;}
	















	
	
/*
继承复杂的选择器时
假如一条样式规则继承了一个复杂的选择器，那么它只会继承这个复杂选择器命中的元素所
应用的样式
如下面的.complex继承了.a.b的样式color:#aca  而不是单独的.a的样式或.b的样式
*/
.a{
	border:1px solid yellow;
}

.b{
	background-color:#ccc;}	
	
body .a.b{
	color:#aca;
}

.complex{
  font-size:20px;
  @extend   .a.b;
}






