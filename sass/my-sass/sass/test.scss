
/*引入Compass的重置模块 ，保持样式表现一致   start*/ 
/*  @import "compass/reset";  */
/*引入Compass的重置模块 ，保持样式表现一致   end*/ 


/*通过在你的Sass文件中添加@include reset-html5命令，
输出文件中会生成额外的CSS规则来对HTML5的元素进行基本的样式修改 ----------start*/

/*  @include  reset-html5; */

/*html5重置样式--------------end*/


/*排版工具*/
@import "compass/typography";




/*处理CSS3厂商前缀*/
@import "compass/css3";

/*布局模块*/
@import "compass/layout";


/*这个变量不管用哎
$experimental-support-for-microsoft:false;*/


h3{
	background:hsla(135,50%,50%,.3);
	text-align:center;
	@include border-radius(5px);
}



/*变量需要先定义后再使用，有前后顺序的 */ 
$color:#999;
$border-color:black;



p{ 
	$width:200px;
	width:$width;
	color:$color;
	border:1px solid $border-color;
	 
	}
#content{
  article{
    h1{
		color:#333;
	}
	p{
		border:1px solid $border-color;
		transition:border 0.25s ease-in-out 0s,background-color 0.15s ease-in-out 0s;
	    background-color:#eee;
		&:hover{
			cursor:pointer;
		    background-color:#ddd;
			border:1px solid yellow;
		}
	}
	 
  }
  
  aside{
     background-color:#eee;
	 body.ctt &{
	   color:pink;
	 }
  }
}
/*群组选择器*/
#content{
  h1,h2{
    background-color:#abcdef;
	
  }
}

nav,aside{
   a{
     text-decoration:none;
   }
}


 /*-----------子组合选择器和同层组合选择器：>、+和~ 这类的也可以应用嵌套规则，sass会把嵌套的一个个连起来----------*/
div#ultt{

   /*
     结果
     div#ultt li + li {
		background-color: pink;
	 }
   */
   li{
     +li{
	 	 font-weight:600;
	 }
   	 
   }
   
   
   /*
     结果
	div#ultt > ul > li {
		text-decoration: underline;
	}
   */
   >ul{
      >li{
	     text-decoration:underline;
	  }  
   }
   
 
/*why.....?
   Because:&会被替换为div#ultt ul 而不是ul,所以........&符号有待考证
   
   可以用这个案例证明奥(&会被替换为div#ultt ul 而不是ul)
   #content{
   article {
 
	nav + & { color: red }
   }
}
*/   
ul{
      text-decoration:underline;
      li  + &{
	     border:2px solid yellow;

	  }
   }   
}


/*  -------------------------------------------嵌套属性----------------------------------- */


//生成样式代码

 //.propertyNest {
//  border: 2px solid #ddd;
//  border-top-color: yellow;
//  border-top-width: 4px;
//  border-bottom-color: blue;
//  border-bottom-width: 4px;
// }
.propertyNest{
   p{
     border:none;
	 width:auto;
   }
   border: 2px solid #ddd{
      top:{
	     color:yellow;
		 width:4px;
	  }
	  
	  bottom:{
	     color:blue;
		 width:4px;
	  }
   }
}

/*-----------默 认变 量 值--------------------*/
@import  "abc";/*嵌套导入局部sass文件*/
 
@import  "abf";

$test-color:red;
$text-color2:blue;
$bgColors:yellow;

div[data-vb="dfvb"]{
  background-color:$bgColors;
  @import "abd";/*嵌套导入局部sass文件*/
  border-color:$dcolor;
  border:1px solid black{
     color:$dcolor;
	 width:2px;
  };
 text-decoration: $text;
 border-color:$text-color2;
  
} 



/*导入原生的CSS文件*/
@import url(../mycss/originalCSS.css);

//@import "_changeSass";

//混合样式定义
@mixin rounded-corner{
  display:block;
  width:100%;
  height:34px;
  padding:6px 12px;
  box-sizing:border-box;
  border:1px solid #ccc;
  border-radius:4px;
  box-shadow:0 1px 1px rgba(0,0,0,.075) inset;
  background-color:#fff;
  color:#555;
  font-size:14px;
  line-height:1.4;
  transition:border-color 0.15s ease-in-out 0s,box-shadow 0.15s ease-in-out 0s;
  &:focus{
  	border-color:#66afe9;
	box-shadow:0 1px 1px rgba(0,0,0,0.075) inset,0 0 8px rgba(102,175,233,0.6) ;
  }
}


//混合器使用
[name=helln]{
  @include rounded-corner;
  
}

[name=favorite]{
  @include rounded-corner;
}
//带有参数的混合器  有默认值的参数要定义在没有默认值参数的后面 ，不然会报语法错误的，比如$active和$hover:$normal的位置

@mixin hihi($normal,$hover,$active:$normal){
	color:$normal;
	
	&:hover{
	 color:$hover;
	}
	&:active{
	  color:$active;
	}

}

a.hi{
  @include hihi($normal:black,$hover:pink)
}







//选择器继承

/*
	选择器.seriousError继承.error后，.error会被替换为：
	.error, .seriousError {
		background-color: #fdd;
		border: 1px solid red;
		margin-top: 5px;
	}
	
	并且，继承了.error后，与.seriousError的其它选择器组合会与.error一样的效果
*/
.error{
  margin-top:5px;
  border: 1px solid red;
  background-color: #fdd;
}


/*
  	源码中:
	div.error, div.seriousError {
		border-radius: 5px;
	}
*/
div.error{
  
  border-radius:5px;
  
}


/*
  源码中：
  
	.error p, .seriousError p {
		border: medium none;
		color: #000;
		width: auto;
	}
*/
.error p{
  width:auto;
  color:#000;
  border:none;}
  
  
/*
	源码中：
	.seriousError {
    border-width: 3px;
	}
	.error, .seriousError {
		background-color: #fdd;
		margin-top: 5px;
	}
*/
.seriousError {
	@extend .error;
	border-width: 3px;
}
/*继承元素选择器的CSS样式规则*/
font{
  font-size:19px;}
  
.disabled{
	color:gray;
	@extend font;}
	















	
	
/*
继承复杂的选择器时
假如一条样式规则继承了一个复杂的选择器，那么它只会继承这个复杂选择器命中的元素所
应用的样式
如下面的.complex继承了.a.b的样式color:#aca  而不是单独的.a的样式或.b的样式
*/
.a{
	border:1px solid yellow;
}

.b{
	background-color:#ccc;}	
	
body .a.b{
	color:#aca;
}
/*
    生成的css源码：
	body .a.b, body .complex {
		color: #aca;
	}
	.complex {
		font-size: 20px;
	}
*/
.complex{
  font-size:20px;
  @extend   .a.b;
}







/*处理CSS3厂商前缀 要在文件头部引入 @import "compass/css3";*/



.border-radius-handler{
	display:flex;
	justify-content:center;
	align-items:center;
	margin:0 30%;
	height:100px;
	background:hsla(305,50%,50%,.3);	 
	@include border-radius(5px);
}

.border-radius-handler1{
	display:flex;
	justify-content:center;
	align-items:center;
	margin:10px 30%;
	height:100px;
	background:hsla(305,50%,50%,.3);	 
	@include border-corner-radius(top,left,10px);
}

a.link{
  display:block;
  margin:0 40%;
  font-size:20px;
  color:#333;
  text-align:center;
}

/*
a.mao:visited{
	color:#555;
}
a.mao:focus{
	color:#f00;
}
a.mao:hover{
	color:#00f;
}
a.mao:active{
	color:#f00;
}*/




a.mao{

	/*用link-colors为链接配色*/
	@include link-colors(
	#333,
	$hover:#00f,
	$active:#f00,
	$visited:yellow,
	$focus:#f00
	);

	/*hover-link设置悬停和获得焦点时的样式*/
	@include hover-link;
	
	 
}

/*通过unstyled-link设置隐性的链接*/
a.nostyle{
	@include unstyled-link;
}



/*列表*/
.list{
	
	background:hsla(305,50%,50%,.1) ;
	margin:0 30%;
	border-radius:10px;

}


.list ul.simple li {
   /*基于图片的列表符号 
     图片位置background-position的计算方式为
     x=(padding-image width)/2
     y=(line-height-image width)/2
   */
    background: rgba(0, 0, 0, 0) image_url("arrow.png") no-repeat scroll 6px 15px / 8px 10px;
    padding-left: 20px;
    line-height: 40px;
    list-style-type: none;
   
}




/*利用混合器制造图片列表符号*/
.list ul.feature{
	@include pretty-bullets(
		"arrow.png",
		8px,
		10px,
		$line-height:40px,
		$padding:20px
		);

		li{
			line-height:40px;
			background-size:8px 10px;
		}
	
}


/*利用混合器制造水平列表 */

.list ul.nobullet li{
	@include no-bullet;
}

/*轻松横向排布    ..*/
.list ul.nobullets{
	@include no-bullets;
	
}


/*水平列表*/
ul.hztlist{
	@include horizontal-list(10px,right);
}



/*用省略号代表截断内容*/
.wtsp{
  background: rgba(191, 64, 181, 0.1) none repeat scroll 0 0;
  width: auto;
  height: 50px;
  margin: 10px 30%;
}


p.wtsp1{
	 
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

}


p.wtsp2{
	 
    @include ellipsis;

}


/*文字替换为图片*/
.replace{
	height:100px;
	border:5px solid hsla(305,50%,50%,.2);
	border-radius:10px;
	background-size:250px auto;
}

h1.rp1{
	
	text-indent:-119988px;
	overflow:hidden;
	text-align:left;
	background-image:url("../images/coffee.png");
	background-repeat:no-repeat;
	background-position:50% 50%;
	
}

h1.rp2{
	
	 @include replace-text("coffee.png",30%,30%);
	
}




.stretch div{
	@include stretch(10px,5px,10px,5px);
}



.shadow{
	box-shadow:3px 3px 5px rgba(0,0,0,.2);
	margin:0 10%;
	min-height:40px;

	p:first-child{
	
		$text-shadow1: rgba(#000,.5) -200px 0 0;
		$text-shadow2: rgba(#000,.4) -400px 0 0;
		$text-shadow3: rgba(#000,.2) -600px 0 0;
		$text-shadow4: rgba(#000,.2) -800px 0 0;

	
		width:100%;
		font-style:italic;
		text-align:right;
		/*text-shadow:
			 rgba(0,0,0,.5) -200px 0 0,
			 rgba(0,0,0,.4) -400px 0 0,
			 rgba(0,0,0,.3) -600px 0 0,
			 rgba(0,0,0,.1) -800px 0 0;*/
		@include text-shadow(
		 	 rgba(#000,.5) -200px 0 0,
			 rgba(#000,.4) -400px 0 0,
			 rgba(#000,.3) -600px 0 0,
			 $text-shadow4
		);
		border:none;
		color:currentColor;
	}

	p:last-child{



		display: inline-block;
	    height: 50px;
	    left: 50%;
	    margin-bottom: 100px;
	    margin-right: auto;
	    margin-top: 100px;
	    padding: 40px;
	    position: relative;
	    text-align: center;
	    transform: translateX(-50%);
	    width: 50px;

	    background-color:#999;
	    color:#fff;
	    border-radius:100px;
	    /*box-shadow:
		    black 0 0 0 25px,
		    red 0 -50px 0,
		    blue 50px 0 0,
		    yellow 0 50px 0,
		    lime -50px 0 0;*/

		@include box-shadow(
			black 0 0 0 25px,
		    red 0 -50px 0,
		    blue 50px 0 0,
		    yellow 0 50px 0,
		    lime -50px 0 0
		);    
		 
	}

}



/*CSS3线性渐变*/

.lgt{

	width:200px;
	height:200px;
	margin:0 auto;
	/*background:linear-gradient(90deg,
	pink 25%,yellow 25%,yellow 50%,green 50%,green 75%,blue 75%,blue 100%);*/

	@include background( 
		linear-gradient(
		  90deg, pink 25%,yellow 25%,yellow 50%,green 50%,green 75%,blue 75%,blue 100%
		) 
	)
	
}


/*字体包*/



 



